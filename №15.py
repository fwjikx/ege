# шаблон
# def Del(n, m):
#    return n % m == 0
#
#
# def f(x, A):
#    return (Del(x, 9) <= (not (Del(x, 6))) or (x + A >= 100))  # условие

# шаблон
# for A in range(1, 1000):
#    flag = 1
#    for x in range(1, 1000):
#        if not f(x, A):
#            flag = 0
#            break
#    if flag:
#        print(A)'''

'''Введём выражение M & K, обозначающее поразрядную конъюнкцию M и K (логическое «И» между соответствующими битами двоичной записи).
 Так, например, 14&5 = 1110_2 & 0101_2 = 0100_2 = 4. Определите наименьшее натуральное число А, такое что выражение
x&39 = 0 ∨ (x&11 = 0 → x&А ≠ 0) тождественно истинно (то есть принимает значение 1 при любом натуральном значении переменной x)?'''

# def f(x, A):
#    return ((x & 39) == 0) or (((x & 11) == 0) <= ((x & A) != 0))
#
#
# print(min(A for A in range(0, 200) if all(f(x, A) == 1 for x in range(1, 2000))))


''' На числовой прямой даны два отрезка: P = [17; 54] и Q = [37; 83]. Укажите наименьшую возможную длину такого отрезка A,
 что логическое выражение  (x∈P)→(((x∈Q)∧¬(x∈A))→¬(x∈P)) истинно (т.е. принимает значение 1) при любом значении переменной х.'''


def f(x):
    P = 17 <= x <= 54
    Q = 37 <= x <= 83
    A = a1 <= x <= a2
    return P <= ((Q and (not A)) <= (not P))


result = []
d = [y for x in (17, 37, 54, 83) for y in (x, x + 0.1, x - 0.1)]
for a1 in d:
    for a2 in d:
        if a2 >= a1 and all(f(x) for x in d):  # логическое выражение истинно, если ложно, то all(f) == 0
            result += [a2 - a1]

print(round(min(result)))  # min из условия (укажите наименьшую длину)
