#открываем файл

f = open('17.txt')
a = [int(x) for x in f]

#прогон по парам (a[i], a[i + 1])
for i in range(len(a) -1):

#прогон по тройкам (a[i], a[i + 1], a[i + 2])
for i in range(len(a) - 2):

#число состоит из 5 цифр
if len(str(abs(a[i]))) == 5

#помним про отрицательные числа и деление с ними
if abs(a[i]) % 18 == 0 #кратное 18, берите модуль

#взять тройки срезом (в список)
tr = a[i:i+3]

#пример задачи
'''В файле содержится последовательность целых чисел. Её элементы могут принимать целые значения от -10000 до 10000 включительно. 
Определите количество троек последовательности, в которых хотя бы один элемент является четырехзначным числом и оканчивается на 27, 
а сумма квадратов элементов тройки не больше квадрата минимального элемента последовательности, являющегося четырехзначным числом, кратным 17. 
Гарантируется, что такой элемент в последовательности есть.В ответе запишите количество найденных троек, затем минимальную из сумм модулей элементов таких троек. 
В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.'''
f = open('17_20963.txt')
a = [int(x) for x in f]
mn = m = 10 ** 10
k = 0

for i in range(len(a)):
    if len(str(abs(a[i]))) == 4 and abs(a[i]) % 17 == 0:
        mn = min(mn, a[i])

for i in range(len(a) - 2):
    x1 = len(str(abs(a[i]))) == 4 and abs(a[i]) % 100 == 27
    x2 = len(str(abs(a[i + 1]))) == 4 and abs(a[i + 1]) % 100 == 27
    x3 = len(str(abs(a[i + 2]))) == 4 and abs(a[i + 2]) % 100 == 27
    if (x1 + x2 + x3) > 0 and (a[i] ** 2 + a[i + 1] ** 2 + a[i + 2] ** 2) <= mn ** 2:
        k += 1
        m = min((abs(a[i]) + abs(a[i + 1]) + abs(a[i + 2])), m)
print(k, m)

####
a = [int(x) for x in open('17_Demo22.txt')]

mn = min(i for i in a if i % 100 == 15)
sp = []
for i in range(len(a) - 2):
    usl1 = abs(a[i]) % 10 == 3
    usl2 = abs(a[i + 1]) % 10 == 3
    usl3 = abs(a[i + 2]) % 10 == 3
    if usl1 + usl2 + usl3 <= 2:
        if a[i] + a[i + 1] + a[i + 2] >= mn:
            sp.append(a[i] + a[i + 1] + a[i + 2])

print(len(sp), max(sp))
